# lumNLopt/Parameter_Update.py
"""
Parameter Update Interface for Geometry Modification.

This module provides a clear and dedicated interface to update the device
geometry with new parameters generated by the optimizer. It acts as a bridge
between the optimization loop and the geometry handling modules, promoting
a clean separation of concerns.

The main function takes the new parameters and the simulation object, and
forwards them to the geometry handler to update the physical structure in
the Lumerical simulation.
"""

import numpy as np
from lumNLopt.geometries.geometry_parameters_handling import GeometryParameterHandler
from lumNLopt.utilities.simulation import Simulation

def update_geometry_parameters(
    parameters: np.ndarray,
    geometry_handler: GeometryParameterHandler,
    simulation: Simulation
) -> None:
    """
    Updates the device geometry using a new set of parameters.

    This function calls the geometry handler to first process the raw
    parameters (including morphological filtering) and then update the
    corresponding structures within the Lumerical FDTD simulation.

    Args:
        parameters: The new array of optimization parameters from the optimizer.
        geometry_handler: The instance of the geometry handler that manages
                          the device structure.
        simulation: The Lumerical simulation object where the geometry
                    needs to be updated.
    """
    if not isinstance(geometry_handler, GeometryParameterHandler):
        raise TypeError("geometry_handler must be an instance of GeometryParameterHandler.")

    print(f"Updating geometry with {parameters.size} parameters...")

    # The update_geometry method in the handler is responsible for all steps:
    # 1. Organizing and validating the raw parameters.
    # 2. Applying morphological filtering for manufacturability.
    # 3. Updating the rectangle cluster definitions.
    # 4. Modifying the geometry in the Lumerical simulation environment.
    geometry_handler.update_geometry(params=parameters, sim=simulation)

    print("Geometry update complete.")
